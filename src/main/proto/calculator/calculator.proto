syntax = "proto3";

package calculator;

option java_package = "com.proto.calculator";
option java_multiple_files = true;

message CalculatorRequest {
    int64 first_number = 1;
    int64 second_number = 2;
}

message CalculatorResponse {
    int64 total = 1;
}

message PrimeNumberDecompositionRequest {
    uint64 n = 1;
}

message PrimeNumberDecompositionResponse {
    uint64 result = 1;
}

message AverageRequest {
    int64 number = 1;
}

message AverageResultResponse {
    double result = 1;
}

message FindMaxRequest {
    int64 n = 1;
}

message FindMaxResponse {
    int64 result = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalculatorService {
    // Unary
    rpc Add(CalculatorRequest) returns (CalculatorResponse) {};

    // Server streaming
    rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

    // Client streaming
    rpc Average(stream AverageRequest) returns (AverageResultResponse) {};

    // Bidirictional streaming
    rpc FindMax(stream FindMaxRequest) returns (stream FindMaxResponse) {};

    // Error handling
    // This rpc will throw an exception if the sent number is negative
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};

}